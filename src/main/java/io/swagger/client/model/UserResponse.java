/*
 * Swirepay
 * Swirepay REST APIs' are resource-oriented URLs that accept JSON-encoded request bodies, return JSON-encoded responses, and use standard HTTP response codes, authentication, and verbs. You can use the Swirepay API in test mode, which does not affect your live data or interact with the banking networks. The `API key` you use to authenticate the request determines whether the request is live mode or test mode.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swirepay.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * UserResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-16T16:28:53.447+05:30[Asia/Kolkata]")
public class UserResponse {
  @SerializedName("gid")
  private String gid = null;

  @SerializedName("givenName")
  private String givenName = null;

  @SerializedName("familName")
  private String familName = null;

  @SerializedName("fullName")
  private String fullName = null;

  @SerializedName("isEmailConfirmed")
  private String isEmailConfirmed = null;

  @SerializedName("phoneNumber")
  private String phoneNumber = null;

  @SerializedName("isTwoFactorEnabled")
  private Boolean isTwoFactorEnabled = null;

  @SerializedName("lastLogin")
  private String lastLogin = null;

  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("deleted")
  private Boolean deleted = null;

  @SerializedName("createdAt")
  private String createdAt = null;

  @SerializedName("updatedAt")
  private String updatedAt = null;

  public UserResponse gid(String gid) {
    this.gid = gid;
    return this;
  }

   /**
   * Get gid
   * @return gid
  **/
  @Schema(example = "user-16b90f1c2ecc484c899f2720c557f5a7", description = "")
  public String getGid() {
    return gid;
  }

  public void setGid(String gid) {
    this.gid = gid;
  }

  public UserResponse givenName(String givenName) {
    this.givenName = givenName;
    return this;
  }

   /**
   * Get givenName
   * @return givenName
  **/
  @Schema(description = "")
  public String getGivenName() {
    return givenName;
  }

  public void setGivenName(String givenName) {
    this.givenName = givenName;
  }

  public UserResponse familName(String familName) {
    this.familName = familName;
    return this;
  }

   /**
   * Get familName
   * @return familName
  **/
  @Schema(description = "")
  public String getFamilName() {
    return familName;
  }

  public void setFamilName(String familName) {
    this.familName = familName;
  }

  public UserResponse fullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

   /**
   * Get fullName
   * @return fullName
  **/
  @Schema(description = "")
  public String getFullName() {
    return fullName;
  }

  public void setFullName(String fullName) {
    this.fullName = fullName;
  }

  public UserResponse isEmailConfirmed(String isEmailConfirmed) {
    this.isEmailConfirmed = isEmailConfirmed;
    return this;
  }

   /**
   * Get isEmailConfirmed
   * @return isEmailConfirmed
  **/
  @Schema(description = "")
  public String getIsEmailConfirmed() {
    return isEmailConfirmed;
  }

  public void setIsEmailConfirmed(String isEmailConfirmed) {
    this.isEmailConfirmed = isEmailConfirmed;
  }

  public UserResponse phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Get phoneNumber
   * @return phoneNumber
  **/
  @Schema(description = "")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public UserResponse isTwoFactorEnabled(Boolean isTwoFactorEnabled) {
    this.isTwoFactorEnabled = isTwoFactorEnabled;
    return this;
  }

   /**
   * Get isTwoFactorEnabled
   * @return isTwoFactorEnabled
  **/
  @Schema(example = "false", description = "")
  public Boolean isIsTwoFactorEnabled() {
    return isTwoFactorEnabled;
  }

  public void setIsTwoFactorEnabled(Boolean isTwoFactorEnabled) {
    this.isTwoFactorEnabled = isTwoFactorEnabled;
  }

  public UserResponse lastLogin(String lastLogin) {
    this.lastLogin = lastLogin;
    return this;
  }

   /**
   * Get lastLogin
   * @return lastLogin
  **/
  @Schema(example = "2020-09-25T03:43:13", description = "")
  public String getLastLogin() {
    return lastLogin;
  }

  public void setLastLogin(String lastLogin) {
    this.lastLogin = lastLogin;
  }

  public UserResponse active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @Schema(example = "true", description = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public UserResponse deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

   /**
   * Get deleted
   * @return deleted
  **/
  @Schema(example = "false", description = "")
  public Boolean isDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  public UserResponse createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(example = "2020-09-25T03:43:13", description = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public UserResponse updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(example = "2020-09-25T03:43:13", description = "")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserResponse userResponse = (UserResponse) o;
    return Objects.equals(this.gid, userResponse.gid) &&
        Objects.equals(this.givenName, userResponse.givenName) &&
        Objects.equals(this.familName, userResponse.familName) &&
        Objects.equals(this.fullName, userResponse.fullName) &&
        Objects.equals(this.isEmailConfirmed, userResponse.isEmailConfirmed) &&
        Objects.equals(this.phoneNumber, userResponse.phoneNumber) &&
        Objects.equals(this.isTwoFactorEnabled, userResponse.isTwoFactorEnabled) &&
        Objects.equals(this.lastLogin, userResponse.lastLogin) &&
        Objects.equals(this.active, userResponse.active) &&
        Objects.equals(this.deleted, userResponse.deleted) &&
        Objects.equals(this.createdAt, userResponse.createdAt) &&
        Objects.equals(this.updatedAt, userResponse.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gid, givenName, familName, fullName, isEmailConfirmed, phoneNumber, isTwoFactorEnabled, lastLogin, active, deleted, createdAt, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserResponse {\n");
    
    sb.append("    gid: ").append(toIndentedString(gid)).append("\n");
    sb.append("    givenName: ").append(toIndentedString(givenName)).append("\n");
    sb.append("    familName: ").append(toIndentedString(familName)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    isEmailConfirmed: ").append(toIndentedString(isEmailConfirmed)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    isTwoFactorEnabled: ").append(toIndentedString(isTwoFactorEnabled)).append("\n");
    sb.append("    lastLogin: ").append(toIndentedString(lastLogin)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
